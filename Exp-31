#include <stdio.h>
#include <stdint.h>
#include <string.h>

#define BLOCK_SIZE 16
#define CONSTANT_128 0x87
#define CONSTANT_64  0x1b
void left_shift_one_bit(uint8_t *block, size_t size) {
    int carry = 0;
    for (int i = size - 1; i >= 0; i--) {
        int new_carry = (block[i] & 0x80) ? 1 : 0;
        block[i] = (block[i] << 1) | carry;
        carry = new_carry;
    }
}

void xor_with_constant(uint8_t *block, uint8_t constant, size_t size) {
    block[size - 1] ^= constant;
}

void generate_subkeys(uint8_t *key, uint8_t *subkey1, uint8_t *subkey2, size_t block_size) {
    uint8_t block[BLOCK_SIZE] = {0};
    uint8_t constant;
    memset(block, 0, BLOCK_SIZE);
    left_shift_one_bit(block, BLOCK_SIZE);
    constant = (block[0] & 0x80) ? CONSTANT_128 : 0;
    xor_with_constant(block, constant, BLOCK_SIZE);
    memcpy(subkey1, block, BLOCK_SIZE);
    left_shift_one_bit(subkey1, BLOCK_SIZE);
    constant = (subkey1[0] & 0x80) ? CONSTANT_128 : 0;
    xor_with_constant(subkey1, constant, BLOCK_SIZE);
    memcpy(subkey2, subkey1, BLOCK_SIZE);
}

int main() {
    uint8_t key[BLOCK_SIZE] = {0};
    uint8_t subkey1[BLOCK_SIZE];
    uint8_t subkey2[BLOCK_SIZE];

    generate_subkeys(key, subkey1, subkey2, BLOCK_SIZE);

    printf("Subkey 1: ");
    for (int i = 0; i < BLOCK_SIZE; i++) {
        printf("%02x ", subkey1[i]);
    }
    printf("\n");

    printf("Subkey 2: ");
    for (int i = 0; i < BLOCK_SIZE; i++) {
        printf("%02x ", subkey2[i]);
    }
    printf("\n");

    return 0;
}
