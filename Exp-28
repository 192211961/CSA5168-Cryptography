#include <stdio.h>
#include <stdlib.h>
#include <math.h>
unsigned long long modExp(unsigned long long base, unsigned long long exp, unsigned long long mod) {
    unsigned long long result = 1;
    base = base % mod;
    while (exp > 0) {
        if (exp % 2 == 1)
            result = (result * base) % mod;
        exp = exp >> 1;
        base = (base * base) % mod;
    }
    return result;
}

int main() {
    unsigned long long q = 23;
    unsigned long long a = 5;
    unsigned long long xA = 6;
    unsigned long long xB = 15;
    unsigned long long A = modExp(a, xA, q);
    printf("Alice sends to Bob: %llu\n", A);
    unsigned long long B = modExp(a, xB, q);
    printf("Bob sends to Alice: %llu\n", B);
    unsigned long long sharedSecretA = modExp(B, xA, q);
    printf("Alice's shared secret: %llu\n", sharedSecretA);
    unsigned long long sharedSecretB = modExp(A, xB, q);
    printf("Bob's shared secret: %llu\n", sharedSecretB);
    if (sharedSecretA == sharedSecretB) {
        printf("Key exchange successful! Shared secret: %llu\n", sharedSecretA);
    } else {
        printf("Key exchange failed.\n");
    }

    return 0;
}
